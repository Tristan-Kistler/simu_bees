  About
This Readme file is intended as a description of the files used to run the simulations described in the article entitled: 
How partial phenotyping helps to increase annual genetic gain in selected honeybee populations.
Authored by Tristan Kistler, Evert W. Brascamp, Benjamin Basso, Florence Phocas and Piter Bijma.

  Files
The R files present were used to simulate honeybee breeding schemes. 
Files are organized in five folders: ‘simu_bees_functions’, ‘simulation_scripts’, and ‘par’, ‘inv_A_scripts’, and ‘AIREMLF90_script’. 
The first contains four R scripts containing all the functions of the simulation software, organized arbitrarily by their role in the simulation. 
The second contains three R scripts sourcing and then calling the functions in the first folder and realizing the three simulation phases described in the article: Initialization, Base, and Alternative. 
The third contains two example parameter files corresponding to the scenarios with a breeding goal with equal weights on both traits, a null genetic correlation between traits and also between worker (direct) and queen (maternal) effects; and the one with a breeding goal focusing only on the late trait, a -0.6 genetic correlation between traits, and a -0.5 between effects. The other parameter files can be recreated by modifying on the selection criteria defined in the variables ‘Q_SELECTION_CRITERION_INI’, ‘PGM_SELECTION_CRITERION_INI’, ‘DPQ_SELECTION_CRITERION_INI’ (for the Initialization phase using phenotypes as selection criteria), and ‘Q_SELECTION_CRITERION’, ‘PGM_SELECTION_CRITERION_INI’, ‘DPQ_SELECTION_CRITERION_INI’ (using EBVs as selection criteria); and the values under ‘# Genetic covariance among each of both traits’, ‘# Genetic covariance among each of both traits’, and ‘# Genetic covariance between each of both traits’ as defined by the Kronecker product between the 2 by 2 matrices of genetic (covariances) of worker and queen effects, and the between-traits genetic correlation (see main text).
The fourth folder contains two R scripts used to prepare inputs and then invert and write a ‘giv’ file containing the inversed relationship matrix as described by Brascamp and Bijma (2019). The first file ‘simu_function_Pim_pedigreev20.R’ contains a function preparing input for the second function in the script ‘simu_function_AMD-AINV-20.r’ producing and writing the inversed relationship matrix file. As the scripts containing the other functions, of the simu_bees program, these two function scripts are sourced in the simulation scripts ‘breeding_scheme_sim_BaseScenOnly_server.R’ and ‘breeding_scheme_sim_AltScenOnly_server.R’ and not in ‘breeding_scheme_sim_BurnIn_server.R’ where EBVs are not calculated).
Lastly, the fifth folder contains an example script to run the AIREMLF90 program, using the inversed relationship matrix and a performance file created by the simulation scripts to estimate parameters and solve the BLUP equations.

  Running the simulation
Simulations are then run in R by calling successively the three R scripts of each simulation phase (Initialization: breeding_scheme_sim_BurnIn_server.R; Base: breeding_scheme_sim_BaseScenOnly_server.R; and Alternative: breeding_scheme_sim_AltScenOnly_server.R). We used R version 3.5.0 (2018-04-23) but expect new versions to be compatible.
This was done within a Bash pipeline running all scenarios by creating folders, modifying the par file according to the scenario targeted, and summarizing results (mean, sd, and correlations mainly) within scenarios. Because this pipeline is too specific to the environment in which the simulations are run, users should create their own. The operating system used was: Red Hat Enterprise Linux Server release 6.7 (Santiago), on x86_64-pc-linux-gnu (64-bit) nodes.
Note that an installation of the AIREMLF90 (ver. 1.149) software of the BLUPF90 package (Misztal et al., 2002) to solve the BLUP equations should be first installed within the environment where the simulations are run. Alternatives within R exist but have not been tested by the authors (such as ASReml-R) that might need some adaptations first to be made compatible with the simulation scripts (input and output files). 
Note also that prior installations of packages ‘tidyr’, ‘dplyr’, ‘purrr’, ‘data.table’, and ‘mvtnorm’ is necessary to run the simulations. We used the versions as follow: ‘tidyr’ (v 1.0.0), ‘dplyr’ (v 1.0.7), ‘purrr’ (v 0.3.4), ‘data.table’ (v 1.0.0), and ‘mvtnorm’ (v 1.0-8). However, probably all newer versions available will be compatible.
